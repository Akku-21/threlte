---
import { c } from '$lib/classes'
import { getHighlighter, type Lang, setCDN, Theme, HtmlRendererOptions } from 'shiki'

interface Props {
  lang: Lang
  theme?: Theme
  class?: string
  title?: string
  code: string
  lineOptions?: HtmlRendererOptions['lineOptions']
}

setCDN('https://unpkg.com/shiki/')

const highlighter = await getHighlighter({
  theme: Astro.props.theme ?? 'dracula-soft',
  langs: ['typescript', 'javascript', 'svelte']
})

const formatted = highlighter.codeToHtml(Astro.props.code.replace(/\n$/, '') ?? '', {
  lang: Astro.props.lang,
  lineOptions: Astro.props.lineOptions ?? []
})
---

{
  Astro.props.title ? (
    <>
      <div class="not-prose text-faded z-10 inline-block translate-y-px rounded-t-md border border-x-white/20 border-t-white/20 border-b-white/5 bg-blue-900 px-2 py-1 text-sm">
        {Astro.props.title}
      </div>
      <div
        class={c(
          'not-prose overflow-x-auto rounded-b-md rounded-tr-md border border-white/20 bg-blue-900 text-sm shadow-xl [&>*]:!bg-transparent [&>*]:p-2',
          Astro.props.class ?? ''
        )}
      >
        <Fragment set:html={formatted} />
      </div>
    </>
  ) : (
    <div
      class={c(
        'not-prose overflow-x-auto rounded-md border border-white/20 bg-blue-900 text-sm shadow-xl [&>*]:!bg-transparent [&>*]:p-2',
        Astro.props.class ?? ''
      )}
    >
      <Fragment set:html={formatted} />
    </div>
  )
}
