---
import { c } from '$lib/classes'

interface Props {
  class?: string
  color?: 'orange' | 'blue' | 'green'
}

const color = Astro.props.color ?? 'orange'

const glowClasses: Record<NonNullable<Props['color']>, string> = {
  orange:
    '[background-image:radial-gradient(closest-side,rgba(255,146,112,0.1)_0%,transparent_100%)]',
  blue: '[background-image:radial-gradient(closest-side,rgba(123,175,224,0.12)_0%,transparent_100%)]',
  green:
    '[background-image:radial-gradient(closest-side,rgba(135,230,151,0.12)_0%,transparent_100%)]'
}

/*
Leave this in to force Tailwind to include the classes
bg-orange
bg-blue
bg-green
glow-orange
glow-blue
glow-green
text-orange-400
text-blue-400
text-green-400
*/
---

<div class={c('border-y border-white/20 pt-10 pb-16 relative', Astro.props.class ?? '')}>
  <div
    class="absolute top-0 left-[00%] w-[100%] h-40 overflow-hidden pointer-events-none select-none"
  >
    <div class={c('absolute top-40 -translate-y-full left-0 w-full h-96', glowClasses[color])}>
    </div>
  </div>

  {
    Astro.slots.has('icon') && (
      <div
        class={c(
          'w-16 h-16 flex justify-center items-center rounded-full mb-10 [&>*]:w-[60%] empty:hidden',
          `bg-${color}`,
          `glow-${color}`
        )}
      >
        <slot name="icon" />
      </div>
    )
  }

  {
    Astro.slots.has('subline') && (
      <h4 class={c('text-base mb-1 empty:hidden', `text-${color}-400`)}>
        <slot name="subline" />
      </h4>
    )
  }

  <h2 class="text-5xl font-bold">
    <slot name="headline" />
  </h2>

  <div class="flex flex-col md:flex-row mt-12 gap-8 text-xl text-white/60">
    <slot name="body" />

    {
      Astro.slots.has('body-left') && (
        <div class="flex-1 empty:hidden">
          <slot name="body-left" />
        </div>
      )
    }

    {
      Astro.slots.has('body-right') && (
        <div class="flex-1 empty:hidden">
          <slot name="body-right" />
        </div>
      )
    }
  </div>
</div>
